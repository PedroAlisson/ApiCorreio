{"ast":null,"code":"var _jsxFileName = \"/media/pedro/1e1e85cc-eaa9-46c3-a50e-c185c4d8a2d1/GoStack/correios-web/src/pages/Correios/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Content, ContentResults } from \"./styles\";\nimport api from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Correios = () => {\n  _s();\n\n  const [inputcep, SetInputCep] = useState(\"\");\n  const [cep, SetCep] = useState([]);\n\n  async function handlePesqCep(event) {\n    event.preventDefault();\n\n    if (!inputcep) {\n      console.log(\"Preencha o cep\");\n    }\n\n    const response = await api.get(`/${inputcep}.json`);\n    const find = response.data;\n    console.log(find);\n\n    if (find.status == 400) {\n      console.log(\"Cep nao encontrado\");\n      return;\n    }\n\n    SetInputCep(\"\");\n    SetCep([...cep, find]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Busca de CEP Api Correios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePesqCep,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"cep\",\n          value: inputcep,\n          onChange: e => SetInputCep(e.target.value),\n          placeholder: \"Digite seu cep\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Pesquisar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContentResults, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Resultado da Consulta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), cep.map(results => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"state\",\n            children: \"Estado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"state\",\n            type: \"text\",\n            value: results.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"city\",\n            children: \"Cidade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"city\",\n            type: \"text\",\n            value: results.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"address\",\n            children: \"Endere\\xE7o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"address\",\n            type: \"text\",\n            value: results.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, results.code, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Correios, \"AN14IvOQRrCGYvC7pHdWF6Fkw1U=\");\n\n_c = Correios;\nexport default Correios;\n\nvar _c;\n\n$RefreshReg$(_c, \"Correios\");","map":{"version":3,"sources":["/media/pedro/1e1e85cc-eaa9-46c3-a50e-c185c4d8a2d1/GoStack/correios-web/src/pages/Correios/index.tsx"],"names":["React","useState","Container","Content","ContentResults","api","Correios","inputcep","SetInputCep","cep","SetCep","handlePesqCep","event","preventDefault","console","log","response","get","find","data","status","e","target","value","map","results","state","city","address","code"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent } from \"react\";\n\nimport { Container, Content, ContentResults } from \"./styles\";\n\nimport api from \"../../services/api\";\n\ninterface CepProps {\n  status: number;\n  code: string;\n  state: string;\n  city: string;\n  district: string;\n  address: string;\n  message: string;\n}\n\nconst Correios: React.FC = () => {\n  const [inputcep, SetInputCep] = useState(\"\");\n\n  const [cep, SetCep] = useState<CepProps[]>([]);\n\n  async function handlePesqCep(\n    event: FormEvent<HTMLFormElement>\n  ): Promise<void> {\n    event.preventDefault();\n\n    if (!inputcep) {\n      console.log(\"Preencha o cep\");\n    }\n\n    const response = await api.get<CepProps>(`/${inputcep}.json`);\n    const find = response.data;\n\n    console.log(find);\n\n    if (find.status == 400) {\n      console.log(\"Cep nao encontrado\");\n      return;\n    }\n    SetInputCep(\"\");\n    SetCep([...cep, find]);\n  }\n  return (\n    <Container>\n      <Content>\n        <h1>Busca de CEP Api Correios</h1>\n        <form onSubmit={handlePesqCep}>\n          <input\n            name=\"cep\"\n            value={inputcep}\n            onChange={(e) => SetInputCep(e.target.value)}\n            placeholder=\"Digite seu cep\"\n          />\n          <button type=\"submit\">Pesquisar</button>\n        </form>\n\n        <ContentResults>\n          {\" \"}\n          <h1>Resultado da Consulta</h1>\n          {cep.map((results) => (\n            <div key={results.code}>\n              <label htmlFor=\"state\">Estado</label>\n              <input name=\"state\" type=\"text\" value={results.state} />\n              <label htmlFor=\"city\">Cidade</label>\n              <input name=\"city\" type=\"text\" value={results.city} />\n              <label htmlFor=\"address\">Endere√ßo</label>\n              <input name=\"address\" type=\"text\" value={results.address} />\n            </div>\n          ))}\n        </ContentResults>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Correios;\n"]},"metadata":{},"sourceType":"module"}